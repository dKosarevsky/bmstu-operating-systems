Лаба №3. Модуль ядра.
http://www.ibm.com/developerworks/ru/library/lproc/

В: Где находится точка входа?
О: Их несколько это
и инициализация и выгрузка модуля, и функции чтения и
записи в proc. Т.о. точки входа четыре.

В: Что такое callback функция?
О: функция, которая в качестве одного из параметра принимает другую функцию
(ее устроило). Ну и показываешь ей функцию чтения и записи фортунок(говоришь,
что это они).

В: Зачем нужны модули ядра?
О: Чтобы расширять функциональность ядра без необходимости его патчить и
перекомпилировать.
О (не устраивает): Чтобы осуществлять системные вызовы.


В: покажи в коде, где ты используешь каждую подключаемую библиотеку
(всё, что в #include’ах)
О:
	- module.h используем для написания программы в формате загружаемого
		модуля (прокручиваешь вниз, там будет module_init ( init_fortune_module );
		module_exit (cleanup_fortune_module ); )
	- kernel.h для функции printk()
	- proc_fs.h для использования структуры proc_dir_entry и функции
		create_proc_entry()
	- string.h для функции sprintf() (она находится в функции fortune_read)
	- vmalloc.h для вызовов vmalloc() и vfree()
	- asm/uaccess.h get_user(), put_user()

В: Что значит Used by 0 ?
О: Используется ядром.

В: что за цифры 644,666 ? у кого как
О: это права доступа
первая цифра для владельца вторая для группы владельц и 3я для остальных
6можно
читать и писать
4 только читать
2 только писать